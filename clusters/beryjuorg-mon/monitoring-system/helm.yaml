apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prom
  namespace: monitoring-system
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
spec:
  timeout: 30m
  interval: 6h
  releaseName: prom
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 34.2.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  valuesFrom:
    - kind: Secret
      name: beryjuorg-prometheus-alertmanager
  values:
    defaultRules:
      create: false
    prometheusOperator:
      admissionWebhooks:
        enabled: false
    prometheus:
      prometheusSpec:
        # While this isn't the public URL for *this* prometheus, it is used by the chart to configure alertmanager's links
        externalUrl: https://thanos.infra.beryju.org
        additionalScrapeConfigs:
          name: prom-kube-prometheus-stack-prometheus-scrape-config
          key: additional-scrape-configs.yaml
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        # ruleSelectorNilUsesHelmValues: false
        retention: 2h
        storageSpec:
          emptyDir:
            medium: Memory
        remoteWrite:
          - url: http://thanos-receive.main-monitoring:19291/api/v1/receive
            writeRelabelConfigs:
              - sourceLabels: [__address__]
                # target label is the one you want to create
                targetLabel: cluster
                replacement: beryjuorg-mon
    alertmanager:
      enabled: true
      externalUrl: https://alertmanager.infra.beryju.org
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: "null"
          - name: "discord"
            slack_configs:
              - channel: "#prometheus"
                icon_url: https://images.s3.beryju.org/prometheus.png
                username: "Prometheus"
                send_resolved: true
                title: |-
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }}{{ else }}{{ .CommonLabels.alertname }}{{ end }}
                text: >-
                  {{ range .Alerts -}}
                    **Alert:** {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
                  **Description:** {{ if ne .Annotations.description ""}}{{ printf "%.400s" .Annotations.description }}{{else}}N/A{{ end }}
                  **Details:**
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "discord"
          routes:
            - receiver: "null"
              match:
                alertname: Watchdog
            - receiver: "discord"
              match_re:
                severity: critical
              continue: true
        inhibit_rules:
          - source_match:
              severity: "critical"
            target_match:
              severity: "warning"
            equal: ["alertname", "namespace"]
    grafana:
      enabled: false
    nodeExporter:
      enabled: false

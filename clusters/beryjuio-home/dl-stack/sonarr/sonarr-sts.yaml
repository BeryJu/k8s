apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: sonarr
    app.kubernetes.io/instance: main
  name: sonarr
  namespace: dl-stack
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr
      app.kubernetes.io/instance: main
  serviceName: "sonarr"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarr
        app.kubernetes.io/instance: main
        io.jela.stack: dl
    spec:
      securityContext:
        runAsUser: 1024
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: Always
      containers:
        - name: sonarr
          image: ghcr.io/onedr0p/sonarr:4.0.0.748
          resources:
            requests:
              memory: "250Mi"
            limits:
              memory: "500Mi"
          env:
            - name: TZ
              value: Europe/Berlin
            - name: UMASK_SET
              value: "022"
          livenessProbe:
            httpGet:
              path: /ping
              port: 8989
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          ports:
            - containerPort: 8989
              name: http
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /media
            - name: media-temp
              mountPath: /media-temp
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media-pvc
        - name: media-temp
          persistentVolumeClaim:
            claimName: media-temp-pvc
  volumeClaimTemplates:
    - metadata:
        name: config
        labels:
          app.kubernetes.io/name: sonarr
          app.kubernetes.io/instance: main
          snapshot.home.arpa/enabled: "true"
      spec:
        resources:
          requests:
            storage: 1Gi
        accessModes:
          - ReadWriteOnce

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: radarr
    app.kubernetes.io/instance: main
  name: radarr
  namespace: dl-stack
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: radarr
      app.kubernetes.io/instance: main
  serviceName: "radarr"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: radarr
        app.kubernetes.io/instance: main
    spec:
      securityContext:
        runAsUser: 1024
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: Always
      containers:
        - name: radarr
          image: ghcr.io/home-operations/radarr:6.0.2.10271
          resources:
            requests:
              memory: "250Mi"
            limits:
              memory: "500Mi"
          env:
            - name: TZ
              value: Europe/Berlin
            - name: UMASK_SET
              value: "022"
          livenessProbe:
            httpGet:
              path: /
              port: 7878
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          ports:
            - containerPort: 7878
              name: http
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /media
            - name: media-temp
              mountPath: /media-temp
      volumes:
        - name: media
          nfs:
            path: /volume1/media
            server: nas1.prod.beryju.io
        - name: media-temp
          nfs:
            path: /volume2/media-temp
            server: nas1.prod.beryju.io
  volumeClaimTemplates:
    - metadata:
        name: config
        labels:
          app.kubernetes.io/name: radarr
          app.kubernetes.io/instance: main
          snapshot.home.arpa/enabled: "true"
      spec:
        resources:
          requests:
            storage: 1Gi
        accessModes:
          - ReadWriteOnce

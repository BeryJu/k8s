apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: goauthentik-my-beryjuorg-dev
spec:
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io/
      chart: authentik
      version: 3.0.0
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  interval: 1h0m0s
  releaseName: authentik
  valuesFrom:
    - kind: Secret
      name: authentik-secrets
  values:
    replicas: 2
    serviceAccount:
      create: false
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: beryjuorg-dev.my.goauthentik.io
          paths:
            - path: "/"
              pathType: Prefix
      tls:
        - hosts: [beryjuorg-dev.my.goauthentik.io]
          secretName: authentik-acme
    postgresql:
      enabled: true
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    redis:
      enabled: true
      architecture: standalone
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    fullnameOverride: authentik
    image:
      repository: beryju.org/authentik/server
      tag: gh-master-1632655094-674bd9e05c1f90f622e5ba471326d03d388c0042 # {"$imagepolicy": "flux-system:authentik-gh-master:tag"}
      pullPolicy: Always
    prometheus:
      serviceMonitor:
        create: true
    geoip:
      enabled: true
    authentik:
      postgresql:
        name: "authentik"
        user: "authentik"
      log_level: debug
      email:
        from: authentik@services.beryju.org
        host: email-smtp.eu-central-1.amazonaws.com
        port: 587
        use_tls: true
      outposts:
        docker_image_base: beryju.org/authentik/outpost-%(type)s:gh-%(build_hash)s
      error_reporting:
        enabled: true
        environment: beryjuorg-dev
        send_pii: true

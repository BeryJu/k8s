apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: artifactory
  namespace: artifactory
spec:
  chart:
    spec:
      # renovate: registryUrl=https://charts.jfrog.io
      chart: artifactory
      version: 107.29.7
      sourceRef:
        kind: HelmRepository
        name: jfrog
        namespace: flux-system
  interval: 1h0m0s
  releaseName: artifactory
  targetNamespace: artifactory
  valuesFrom:
    - kind: Secret
      name: artifactory-secrets
  values:
    postgresql:
      persistence:
        enabled: true
        size: 20Gi
    nginx:
      enabled: false
    ingress:
      enabled: true
      hosts:
        - registry.beryju.org
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/configuration-snippet: |
          rewrite ^/(v1|v2)/(.*) /artifactory/api/docker/docker-priv/$1/$2;
        nginx.ingress.kubernetes.io/proxy-body-size: 50000m
    artifactory:
      service:
        type: ClusterIP
      persistence:
        size: 200Gi
      resources:
        requests:
          memory: "4Gi"
          cpu: "2"
        limits:
          memory: "6Gi"
          cpu: "4"
      javaOpts:
        xms: "4g"
        xmx: "4g"
      customInitContainersBegin: |
        - name: "prepare-fluentd-conf-on-persistent-volume"
          image: "{{ .Values.initContainerImage }}"
          imagePullPolicy: "{{ .Values.artifactory.image.pullPolicy }}"
          command:
            - 'sh'
            - '-c'
            - >
              mkdir -p {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/;
              curl -L  -o {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluentd.conf https://raw.githubusercontent.com/jfrog/log-analytics-prometheus/master/fluent.conf.rt
          volumeMounts:
            - mountPath: "{{ .Values.artifactory.persistence.mountPath }}"
              name: artifactory-volume
      customSidecarContainers: |
        - name: "artifactory-fluentd-sidecar"
          image: "partnership-public-images.jfrog.io/fluentd/fluentd:1.14.0"
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - mountPath: "{{ .Values.artifactory.persistence.mountPath }}"
              name: artifactory-volume
          env:
            - name: JF_PRODUCT_DATA_INTERNAL
              value: {{ .Values.artifactory.persistence.mountPath }}
            - name: FLUENTD_CONF
              value: ../../../../{{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluentd.conf
    ## Allows to add additional kubernetes resources
    ## Use --- as a separator between multiple resources
    ## For an example, refer - https://github.com/jfrog/log-analytics-prometheus
    additionalResources: |
      apiVersion: v1
      kind: Service
      metadata:
        name: {{ template "artifactory.fullname" . }}-metrics
        annotations:
          prometheus.io/path: "/metrics"
          prometheus.io/scheme: "http"
          prometheus.io/port: "24231"
          prometheus.io/scrape: "true"
        labels:
          app: {{ template "artifactory.name" . }}
          chart: {{ template "artifactory.chart" . }}
          component: metrics
          heritage: {{ .Release.Service }}
          release: {{ .Release.Name }}
          {{- with .Values.artifactory.labels }}
      {{ toYaml . | indent 4 }}
          {{- end }}
      spec:
        type: ClusterIP
        ports:
        - name: metrics
          port: 24231
          protocol: TCP
        selector:
          app: {{ template "artifactory.name" . }}
          component: "{{ .Values.artifactory.name }}"
          release: {{ .Release.Name }}
      ---
      apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        name: servicemonitor-{{ template "artifactory.name" . }}
        labels:
          metrics: jfrog
          app: {{ template "artifactory.name" . }}
          chart: {{ template "artifactory.chart" . }}
          heritage: {{ .Release.Service }}
          release: {{ .Release.Name }}
      spec:
        selector:
          matchLabels:
            app: {{ template "artifactory.name" . }}
            component: metrics
        endpoints:
            - port: metrics
              interval: 15s
    databaseUpgradeReady: true
    installerInfo: '{ "productId": "Helm_prometheus_artifactory/{{ .Chart.Version }}", "features": [ { "featureId": "ArtifactoryVersion/{{ default .Chart.AppVersion .Values.artifactory.image.version }}" }, { "featureId": "{{ if .Values.postgresql.enabled }}postgresql{{ else }}{{ .Values.database.type }}{{ end }}/0.0.0" }, { "featureId": "Platform/{{ default "kubernetes" .Values.installer.platform }}" },  { "featureId": "Channel/Helm_prometheus_artifactory" } ] }'

---
# Source: overseerr/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: overseerr-config
  namespace: dl-stack
  labels:
    app.kubernetes.io/instance: overseerr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: overseerr
    app.kubernetes.io/version: 1.26.1
    helm.sh/chart: overseerr-5.4.2
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: overseerr/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: overseerr
  namespace: dl-stack
  labels:
    app.kubernetes.io/instance: overseerr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: overseerr
    app.kubernetes.io/version: 1.26.1
    helm.sh/chart: overseerr-5.4.2
spec:
  type: ClusterIP
  ports:
    - port: 5055
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: overseerr
    app.kubernetes.io/instance: overseerr
---
# Source: overseerr/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: overseerr
  namespace: dl-stack
  labels:
    app.kubernetes.io/instance: overseerr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: overseerr
    app.kubernetes.io/version: 1.26.1
    helm.sh/chart: overseerr-5.4.2
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: overseerr
      app.kubernetes.io/instance: overseerr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: overseerr
        app.kubernetes.io/instance: overseerr
    spec:
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: overseerr
          image: "ghcr.io/sct/overseerr:1.34.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: LOG_LEVEL
              value: info
            - name: TZ
              value: UTC
          ports:
            - name: http
              containerPort: 5055
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /app/config
          livenessProbe:
            tcpSocket:
              port: 5055
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 5055
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 5055
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: overseerr-config
---
# Source: overseerr/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: overseerr
  namespace: dl-stack
  labels:
    app.kubernetes.io/instance: overseerr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: overseerr
    app.kubernetes.io/version: 1.26.1
    helm.sh/chart: overseerr-5.4.2
spec:
  ingressClassName: istio
  rules:
    - host: "overseerr.${CLUSTER_NAME}.k8s.beryju.io"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: overseerr
                port:
                  number: 5055
    - host: "requests.jela.io"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: overseerr
                port:
                  number: 5055
  tls:
    - hosts:
        - overseerr.${CLUSTER_NAME}.k8s.beryju.io
        - requests.jela.io
      secretName: overseerr-acme

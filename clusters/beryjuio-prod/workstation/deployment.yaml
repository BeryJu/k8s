apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: beryju-workstation
    app.kubernetes.io/instance: main
  name: workstation
  namespace: workstation
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: beryju-workstation
      app.kubernetes.io/instance: main
  template:
    metadata:
      labels:
        app.kubernetes.io/name: beryju-workstation
        app.kubernetes.io/instance: main
    spec:
      shareProcessNamespace: true
      containers:
        - image: ghcr.io/beryju/workstation:auto-1713212432 # {"$imagepolicy": "flux-system:workstation"}
          name: workstation-ssh
          resources:
            requests:
              memory: "1Gi"
              cpu: "1"
            limits:
              memory: "2Gi"
              cpu: "2"
          env:
            - name: DOCKER_HOST
              value: tcp://localhost:2375
          ports:
            - containerPort: 22
              name: ssh
              protocol: TCP
            - containerPort: 443
              name: https
              protocol: TCP
            - containerPort: 8080
              name: http-alt
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - "! ssh -o PasswordAuthentication=No root@localhost true 2>&1 | grep -i -c  refused"
            initialDelaySeconds: 3
            periodSeconds: 30
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - "! ssh -o PasswordAuthentication=No root@localhost true 2>&1 | grep -i -c  refused"
            initialDelaySeconds: 3
            periodSeconds: 30
          volumeMounts:
            - mountPath: /home
              name: workstation-data
            - mountPath: /etc/shared/vault
              name: shared-vault
        # - image: ghcr.io/beryju/workstation:auto-1713210251 # {"$imagepolicy": "flux-system:workstation"}
        #   name: workstation-code
        #   args:
        #   - su
        #   - -c
        #   - "/usr/bin/code-server --bind-addr 0.0.0.0:8000 --auth none"
        #   - jens
        #   resources: {}
        #   ports:
        #   - containerPort: 8000
        #     name: http-code
        #     protocol: TCP
        #   volumeMounts:
        #   - mountPath: /home
        #     name: workstation-data
        #   - mountPath: /etc/shared/vault
        #     name: shared-vault
        - command: [/bin/vault]
          args:
            - agent
            - -config=/etc/vault/vault-agent-config.hcl
            - -log-level=debug
          resources:
            requests:
              memory: "30M"
              cpu: "10m"
            limits:
              memory: "30M"
              cpu: "30m"
          env:
            - name: VAULT_ADDR
              value: https://vault.beryju.org
          image: vault:1.12.7
          name: vault-agent
          volumeMounts:
            - mountPath: /etc/vault
              name: config-vault
            - mountPath: /etc/shared/vault
              name: shared-vault
        - name: dind
          image: docker:20.10.24-dind
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-storage
              mountPath: /var/lib/docker
      hostname: workstation
      volumes:
        - name: workstation-data
          persistentVolumeClaim:
            claimName: workstation-data
        - configMap:
            items:
              - key: vault-agent-config.hcl
                path: vault-agent-config.hcl
            name: workstation-vault
          name: config-vault
        - emptyDir: {}
          name: shared-vault
        - name: docker-storage
          emptyDir: {}
      serviceAccount: workstation
      serviceAccountName: workstation

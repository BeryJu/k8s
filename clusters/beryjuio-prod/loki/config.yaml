apiVersion: ricoberger.de/v1alpha1
kind: VaultSecret
metadata:
  name: beryjuorg-loki
  namespace: loki
spec:
  path: kv/services/thanos
  type: Opaque
  templates:
    config.yaml: |
      # This is a configuration to deploy Loki depending only on a storage solution
      # for example, an S3-compatible API like MinIO.
      # The ring configuration is based on the gossip memberlist and the index is shipped to storage
      # via Single Store (boltdb-shipper)

      auth_enabled: false

      server:
        http_listen_port: 3100

      distributor:
        ring:
          kvstore:
            store: memberlist

      ingester:
        lifecycler:
          ring:
            kvstore:
              store: memberlist
            replication_factor: 1
          final_sleep: 0s
        chunk_idle_period: 5m
        chunk_retain_period: 30s
        wal:
          dir: /loki/wal

      memberlist:
        abort_if_cluster_join_fails: false

        # Expose this port on all distributor, ingester
        # and querier replicas.
        bind_port: 7946

        # You can use a headless k8s service for all distributor,
        # ingester and querier components.
        join_members:
        - loki-headless.loki.svc.cluster.local:7946

        max_join_backoff: 1m
        max_join_retries: 10
        min_join_backoff: 1s

      schema_config:
        configs:
        - from: 2020-05-15
          store: boltdb-shipper
          object_store: s3
          schema: v11
          index:
            prefix: index_
            period: 24h

      storage_config:
        boltdb_shipper:
          active_index_directory: /loki/index
          cache_location: /loki/index_cache
          shared_store: s3

        aws:
          bucketnames: loki
          endpoint: s3.beryju.org
          access_key_id: "{% .Secrets.access_key %}"
          secret_access_key: "{% .Secrets.secret_key %}"

      ruler:
        storage:
          type: s3
          s3:
            bucketnames: loki
            endpoint: s3.beryju.org
            access_key_id: "{% .Secrets.access_key %}"
            secret_access_key: "{% .Secrets.secret_key %}"

      limits_config:
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        retention_period: 90d

      compactor:
        working_directory: /loki/compactor
        shared_store: s3
        compaction_interval: 5m
        retention_enabled: true

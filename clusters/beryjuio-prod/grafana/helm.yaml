apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: grafana
spec:
  timeout: 30m
  interval: 6h
  chart:
    spec:
      chart: grafana
      version: 8.5.11
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  values:
    global:
      imageRegistry: proxy.registry.beryju.io
    resources:
      limits:
        memory: 750Mi
      requests:
        memory: 500Mi
    ingress:
      enabled: true
      hosts:
        - grafana.lab.beryju.io
      tls:
        - secretName: beryju-io-authentik-proxy-infra
          hosts:
            - grafana.lab.beryju.io
    serviceMonitor:
      enabled: true
    persistence:
      enabled: true
    deploymentStrategy:
      type: Recreate
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://mimir.mimir.svc.cluster.local/prometheus
            access: proxy
            editable: false
            isDefault: true
            withCredentials: true
            jsonData:
              manageAlerts: true
              prometheusType: Mimir
          - name: Loki
            type: loki
            url: http://loki.loki.svc.cluster.local
            access: proxy
            editable: false
            withCredentials: true
            jsonData:
              manageAlerts: true
          - name: Alert Manager
            type: alertmanager
            url: http://alertmanager-operated.monitoring-system:9093
            access: proxy
            editable: false
            withCredentials: true
        deleteDatasources: []
    envFromSecret: grafana-secrets
    grafana.ini:
      log.console:
        format: json
      server:
        root_url: "https://grafana.lab.beryju.io/"
      plugins:
        enable_alpha: true
      feature_toggles:
        enable: nestedFolders
      auth:
        disable_login_form: true
        signout_redirect_url: "https://id.beryju.io/application/o/grafana/end-session/"
      auth.generic_oauth:
        enabled: true
        name: authentik
        scopes: "openid profile email"
        auth_url: "https://id.beryju.io/application/o/authorize/"
        token_url: "https://id.beryju.io/application/o/token/"
        api_url: "https://id.beryju.io/application/o/userinfo/"
        role_attribute_path: contains(groups[*], 'acl_grafana_admin') && 'Admin' || 'Viewer'

apiVersion: v1
kind: Service
metadata:
  name: plausible
  namespace: analytics
  labels:
    app.kubernetes.io/name: plausible
    app.kubernetes.io/component: server
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      protocol: TCP
  selector:
    app.kubernetes.io/name: plausible
    app.kubernetes.io/component: server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plausible
  namespace: analytics
  labels:
    app.kubernetes.io/name: plausible
    app.kubernetes.io/component: server
spec:
  # Plausible is not currently designed to run in a clustered scenario. Increasing the replicas of this deployment is highly NOT recommended!
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: plausible
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: plausible
        app.kubernetes.io/component: server
    spec:
      restartPolicy: Always
      # see https://github.com/plausible/analytics/blob/master/Dockerfile
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: plausible-init
          image: proxy.registry.beryju.org/plausible/analytics:v2.0.0
          command:
            - "/bin/sh"
            - "-c"
          args:
            - /entrypoint.sh db createdb && /entrypoint.sh db migrate
          envFrom:
            - secretRef:
                name: beryjuorg-plausible-config
          securityContext:
            allowPrivilegeEscalation: false
          resources:
            limits:
              memory: 2Gi
              cpu: 1500m
            requests:
              memory: 50Mi
              cpu: 10m
      containers:
        - name: plausible
          image: proxy.registry.beryju.org/plausible/analytics:v2.0.0
          ports:
            - containerPort: 8000
          envFrom:
            - secretRef:
                name: beryjuorg-plausible-config
          securityContext:
            allowPrivilegeEscalation: false
          resources:
            limits:
              memory: 2Gi
              cpu: 1500m
            requests:
              memory: 140Mi
              cpu: 10m
          readinessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 35
            failureThreshold: 6
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 45
            failureThreshold: 3
            periodSeconds: 10

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: tailscale-subnet-router
  namespace: tailscale
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: tailscale-subnet-router
      app.kubernetes.io/name: tailscale-subnet-router
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: tailscale-subnet-router
        app.kubernetes.io/name: tailscale-subnet-router
    spec:
      serviceAccount: tailscale
      containers:
        - name: tailscale
          image: ghcr.io/tailscale/tailscale:v1.76.6
          ports:
            - containerPort: 9002
              name: healthz
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: healthz
          env:
            # Store the state in a k8s secret
            - name: TS_KUBE_SECRET
              value: "tailscale-auth"
            - name: TS_EXTRA_ARGS
              value: "--login-server https://headscale.beryjuio-oci.k8s.beryju.io --advertise-tags tag:${CLUSTER_NAME}"
            - name: TS_USERSPACE
              value: "true"
            - name: TS_ENABLE_HEALTH_CHECK
              value: "true"
            - name: TS_ENABLE_METRICS
              value: "true"
            - name: TS_AUTHKEY
              valueFrom:
                secretKeyRef:
                  name: tailscale-auth
                  key: TS_AUTHKEY
                  optional: true
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: TS_HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
